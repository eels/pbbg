name: Deploy

on:
  workflow_dispatch:

jobs:
  variables:
    name: Prepare Application Environment Variables
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup
        uses: ./.github/actions/prepare-variables
        with:
          APP_KEY: ${{ secrets.APP_KEY }}
          APP_NAME: ${{ secrets.APP_NAME }}
          APP_SERVER_DOMAIN: ${{ secrets.APP_SERVER_DOMAIN }}
          APP_USE_SECURE_COOKIE_PREFIX: ${{ secrets.APP_USE_SECURE_COOKIE_PREFIX }}
          APP_WEB_CLIENT_DOMAIN: ${{ secrets.APP_WEB_CLIENT_DOMAIN }}
          HOST: ${{ secrets.HOST }}
          NODE_ENV: production
          PORT: ${{ secrets.PORT }}
          SESSION_COOKIE: ${{ secrets.SESSION_COOKIE }}
          SESSION_DRIVER: ${{ secrets.SESSION_DRIVER }}
          DRIVE_DISK: ${{ secrets.DRIVE_DISK }}
          DB_CONNECTION: ${{ secrets.DB_CONNECTION }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}

  deploy:
    name: Deploy
    needs: variables
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup
        uses: ./.github/actions/setup-workflow

      - name: Install sharp linux binaries
        env:
          npm_config_arch: x64
          npm_config_platform: linux
        run: |
          yarn add sharp --ignore-workspace-root-check

      - name: Compress image assets
        env:
          WEB_CLIENT_PUBLIC: applications/web/public
        run: |
          npx imagemin-cli ${{ env.WEB_CLIENT_PUBLIC }}/* \
            --out-dir=${{ env.WEB_CLIENT_PUBLIC }}

      - name: Build
        env:
          NODE_ENV: production
        run: |
          yarn clean
          yarn build
          yarn export

      - name: Precompress static client files
        run: |
          npx gzip-cli "applications/web/out/**/*.{css,html,js,json,svg,txt}" \
            --extension=br --extension=gz
